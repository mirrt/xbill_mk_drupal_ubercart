<?php
/**
 * @file
 * X-bill payment form for Ubercart.
 */

/**
 * Implementation of hook_menu().
 */
function uc_xbillpay_menu() {
  $items['cart/xbillpay/payform'] = array(
    'title' => 'Form fot pay by mobile commerce',
    'page callback' => 'uc_xbillpay_payform',
    'access callback' => 'uc_xbillpay_completion_access',
    'type' => MENU_CALLBACK,
    'file' => 'uc_xbillpay.proccess.inc',
  );
  
    $items['cart/xbillpay/result'] = array(
      'title'    => t('xbill paemnt'),
      'page callback' => 'uc_xbillpay_result',
      'access callback' => 'uc_xbillpay_completion_access',
      'type'     => MENU_CALLBACK,
      'file' => 'uc_xbillpay.proccess.inc',
    );
	
  return $items;
}

// Make sure anyone can complete their 2Checkout orders.
function uc_xbillpay_completion_access() {
  return TRUE;
}

/**
 * Implementation of hook_ucga_display().
 */
function uc_xbillpay_ucga_display() {
  // Tell UC Google Analytics to display the e-commerce JS on the custom
  // order completion page for this module.
  if (arg(0) == 'cart' && arg(1) == 'xbillpay' && arg(2) == 'complete') {
    return TRUE;
  }
}

/**
 * Implementation of hook_form_alter().
 */
function uc_xbillpay_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'uc_cart_checkout_review_form' && ($order_id = intval($_SESSION['cart_order'])) > 0) {
    $order = uc_order_load($order_id);

    if ($order->payment_method == 'xbillpay') {
      unset($form['actions']['submit']);
	  //debug($form);
      $form['#prefix'] = '<table style="display: inline; padding-top: 1em;"><tr><td>';
      $form['#suffix'] = '</td><td>'. render(drupal_get_form('uc_xbillpay_form', $order)) .'</td></tr></table>';
    }
  }
}

/**
 * Implementation of hook_payment_method().
 */
function uc_xbillpay_uc_payment_method() {
  $path = base_path() . drupal_get_path('module', 'uc_xbillpay');
  
  $title = variable_get('uc_xbillpay_method_title', t('Мобильный платеж'));

  $methods[] = array(
    'id' => 'xbillpay',
    'name' => t('X-bill mobile commerce payment method'),
    'title' => $title,
    'review' => "X-bill payment",
    'desc' => t('Request to mobile commerce API X-bill'),
    'callback' => 'uc_payment_method_xbill',
    'weight' => 3,
    'checkout' => TRUE,
    'no_gateway' => TRUE,
  );
  
  return $methods;
}


// Adds xbill settings to the payment method settings form.
function uc_payment_method_xbill($op, &$arg1) {
 global $base_url; 

	switch ($op) {
  
    case 'cart-details':
      return;

    case 'cart-process':
      return;

    case 'settings':
        $form['uc_xbillpay_login'] = array(
        '#type'          => 'textfield',
        '#title'         => t('Login'),
        '#default_value' => variable_get('uc_xbillpay_login',''),
        '#description'   => t("Please enter your login from x-bill.org.\n"),
        '#required'      => TRUE,    
        );


        $form['uc_xbillpay_id'] = array(
        '#type'          => 'textfield', 
        '#title'         => t('Project ID'),
        '#default_value' => variable_get('uc_xbillpay_id',''),
        '#description'   => t("Please enter your project ID."),
        '#required'      => TRUE,
        '#size'          => 6,
        );



        $form['uc_xbillpay_key'] = array(
        '#type'          => 'textfield', 
        '#title'         => t('Controll string'),
        '#default_value' => variable_get('uc_xbillpay_key',''),
        '#description'   => t("Please enter controll key (secret word)."),
        '#required'      => TRUE,
        '#size'          => 80,
        );


        $form['uc_xbillpay_desc'] = array(
        '#type'          => 'textfield', 
        '#title'         => t('Payment description (10 - 100 characters)'),
        '#default_value' => variable_get('uc_xbillpay_desc',''),
        '#description'   => t("Please describe you payment."),
        '#required'      => TRUE,
        '#size'          => 100,
        );	


        $form['uc_xbillpay_answer'] = array(
        '#type'          => 'textfield',
        '#title'         => t("Answer for buyer (10 - 140 characters)"),
        '#default_value' => variable_get('uc_xbillpay_answer',''),
        '#description'   => t("Please enter answer for buyer by SMS"),
        '#required'      => TRUE,
        '#size'          => 140,
        );


        $form['uc_xbillpay_result_url'] = array(
                '#type'        => 'item',
                '#title'       => t('Result URL'),
                '#markup'      => t($base_url . '/cart/xbillpay/result'),
                '#description' => t('Copy to x-bill.org project'),
        );
		
      return $form;
  }


}

// Form to build the srequest
function uc_xbillpay_form($form_id, $form_state) {
   
    $order = $form_state['build_info']['args'][0];
    //debug($order);
    $country = uc_get_country_data(array('country_id' => $order->billing_country));
    if ($country === FALSE) {
        $country = array(0 => array('country_iso_code_3' => 'RUS'));
    }

   $context = array(
     'revision' => 'formatted-original',
     'location' => '2checkout-form',
   );
  
   $options = array(
       'sign' => FALSE,
       'dec' => '.',
       'thou' => FALSE,
   );
   
   $amount = $order->order_total;
   $amount = number_format($amount, 2, '.', ''); 

   $order_id = $order->order_id;
   $order_desc = $order->order_id;

   $xbill_project_id = variable_get('uc_xbillpay_id', '');
   $xbill_login = variable_get('uc_xbillpay_login', '');

   $data = array(
       'order_id'          => $order_id,
       'order_sum'         => $amount,
       'xbill_project_id'  => $xbill_project_id,
       'xbill_login'       => $xbill_login,
   );

   $form['#action'] = base_path(). 'cart/xbillpay/payform';
   $form['#method'] = 'POST';

   foreach ($data as $name => $value) {  
       $form[$name] = array('#type' => 'hidden', '#value' => $value);
   }

   $form['submit'] = array(
      '#type' => 'submit',
      '#value' => variable_get('uc_xbillpay_checkout_button', t('Payment')),
   );
  
    //debug($form);
   return $form;
}

